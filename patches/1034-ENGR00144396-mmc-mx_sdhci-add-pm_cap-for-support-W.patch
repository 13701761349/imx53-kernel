From ca051c9bc1c930735cfc6d35176b1ade7c2b7cef Mon Sep 17 00:00:00 2001
From: Zhang Jiejing <jiejing.zhang@freescale.com>
Date: Tue, 21 Jun 2011 21:26:00 +0800
Subject: [PATCH] ENGR00144396 mmc: mx_sdhci: add pm_cap for support WiFi WoW suspend mode.

This patch add pm_cap for mx_sdhci driver, so the client mmc driver can use
sdio_set_host_pm_flags() to set the MMC_PM_KEEP_POWER.

Also if the driver found MMC_PM_WAKE_SDIO_IRQ in pm_flags,
it should not unregister irq of this host, since the client
maybe use this irq to support wake up.

Signed-off-by: Zhang Jiejing <jiejing.zhang@freescale.com>
---
 drivers/mmc/host/mx_sdhci.c |   31 ++++++++++++++++++++++---------
 1 files changed, 22 insertions(+), 9 deletions(-)

diff --git a/drivers/mmc/host/mx_sdhci.c b/drivers/mmc/host/mx_sdhci.c
index 3940432..5771d5e 100644
--- a/drivers/mmc/host/mx_sdhci.c
+++ b/drivers/mmc/host/mx_sdhci.c
@@ -1821,6 +1821,7 @@ static int sdhci_suspend(struct platform_device *pdev, pm_message_t state)
 {
 	struct sdhci_chip *chip;
 	int i, ret;
+	struct mmc_host *mmc;
 
 	chip = dev_get_drvdata(&pdev->dev);
 	if (!chip)
@@ -1831,10 +1832,12 @@ static int sdhci_suspend(struct platform_device *pdev, pm_message_t state)
 	for (i = 0; i < chip->num_slots; i++) {
 		if (!chip->hosts[i])
 			continue;
-		ret = mmc_suspend_host(chip->hosts[i]->mmc);
+
+		mmc = chip->hosts[i]->mmc;
+		ret = mmc_suspend_host(mmc);
 		if (ret) {
 			for (i--; i >= 0; i--)
-				mmc_resume_host(chip->hosts[i]->mmc);
+				mmc_resume_host(mmc);
 			return ret;
 		}
 	}
@@ -1842,7 +1845,10 @@ static int sdhci_suspend(struct platform_device *pdev, pm_message_t state)
 	for (i = 0; i < chip->num_slots; i++) {
 		if (!chip->hosts[i])
 			continue;
-		free_irq(chip->hosts[i]->irq, chip->hosts[i]);
+		mmc = chip->hosts[i]->mmc;
+		/* Only free irq when not require sdio irq wake up. */
+		if (mmc && !(mmc->pm_flags & MMC_PM_WAKE_SDIO_IRQ))
+			free_irq(chip->hosts[i]->irq, chip->hosts[i]);
 	}
 
 	return 0;
@@ -1851,6 +1857,7 @@ static int sdhci_suspend(struct platform_device *pdev, pm_message_t state)
 static int sdhci_resume(struct platform_device *pdev)
 {
 	struct sdhci_chip *chip;
+	struct mmc_host *mmc;
 	int i, ret;
 
 	chip = dev_get_drvdata(&pdev->dev);
@@ -1862,12 +1869,16 @@ static int sdhci_resume(struct platform_device *pdev)
 	for (i = 0; i < chip->num_slots; i++) {
 		if (!chip->hosts[i])
 			continue;
-		ret = request_irq(chip->hosts[i]->irq, sdhci_irq,
-				  IRQF_SHARED,
-				  mmc_hostname(chip->hosts[i]->mmc),
-				  chip->hosts[i]);
-		if (ret)
-			return ret;
+		mmc = chip->hosts[i]->mmc;
+		/* Only request irq when not require sdio irq wake up. */
+		if (mmc && !(mmc->pm_flags & MMC_PM_WAKE_SDIO_IRQ)) {
+			ret = request_irq(chip->hosts[i]->irq, sdhci_irq,
+					  IRQF_SHARED,
+					  mmc_hostname(chip->hosts[i]->mmc),
+					  chip->hosts[i]);
+			if (ret)
+				return ret;
+		}
 		sdhci_init(chip->hosts[i]);
 		chip->hosts[i]->init_flag = 2;
 		mmiowb();
@@ -2002,6 +2013,8 @@ static int __devinit sdhci_probe_slot(struct platform_device
 		goto out3;
 	}
 
+	mmc->pm_caps = MMC_PM_KEEP_POWER | MMC_PM_WAKE_SDIO_IRQ;
+
 	if (host->plat_data->usdhc_en && sdhci_is_usdhc(host))
 		sdhci_usdhc_select(host);
 
-- 
1.5.4.4

